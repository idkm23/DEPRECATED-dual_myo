'''
Created on Jan 7, 2016

@author: ymeng
'''

import collections

class BuildMDP(object):
    '''
    Build transition matrices and reward matrices
    '''


    def __init__(self, actionsFile, statesFile):
        '''
        Constructor
        '''
        self.actionsFile = actionsFile
        self.statesFile = statesFile
        self.P = self.getTransitions()
        
    def getTransitions(self):
        
        P = collections.defaultdict(int)
        
        with open(self.actionsFile) as f:
            actions = [x.strip() for x in f]
        #--------------------------------------------------------- print actions
            
        with open(self.statesFile) as f:
            states = [x.strip() for x in f]
        #---------------------------------------------------------- print states
        
        assert len(actions) == len(states)
        for i in range(len(states)):
            #----------------------------------------------------------- print i
            P[(states[i], actions[i], states[i+1])] += 1
            if i == len(states)-2: break
        
        print P
        
        
    
                
if __name__ == '__main__':
    actionsFile = './data/emg_labels'
    statesFile = './data/imu_labels'
    builder = BuildMDP(actionsFile, statesFile)
    builder.getTransitions()
                      